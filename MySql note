mysql5.7

​	启动：

​			systemctl	start	mysqld

​	停止：

​			systemctl	stop	mysqld

​	重启：

​			systemctl	restart	mysqld

对于mariadb，初始化登录的时候没有密码

## MySql架构

### 连接层

**1.接收客户端的连接**

​	1.客户端来自不同机器（跨网络）——tcp

​	2.客户端和服务端在同一台机器（域套接字。AF_UNIX）

**2.检验用户的合法性**

​	1.登录的用户名是否合法

​	2.登录的用户名使用的密码是否合法

​	3.当前用户登录的位置是否合法（客户端所在机器IP是否被允许连接mysql服务器）

**3.创建线程为客户端服务**

## Mysql数据库操作

**1.查看有哪些数据库**

​	show	databases;

**2.创建数据库**

​	create	databases	[数据库名称]；

**3.使用某一个数据库**

​	use	[数据库名称]

**4.删除数据库（慎用）**

​	drop	database	[数据库名称]

## Mysql数据库表操作

### 数据库表结构操作

表的字段（类型，属性）

**1.创建数据库表:**指定数据库表的列（字段）名称，列类型，列属性

​	create	table	[表名称]（列名称 列类型 (属性)，列名称 列类型 (属性)，.......）

​	列类型：int（整形，4字节，有符号）

**2.查看数据库表**

​	show	tables;

**3.查看数据库表结构的命令**

​	desc	[表名称]

**4.查看数据库表创建命令**

​	show	create	table	[表名称]\G

​	DEFAULT	TNULL：当前列的属性信息，表示默认值为NULL

​	ENGINE：存储引擎，采用InnoDB（默认支持事务）

​	CHARSET：字符集，决定了数据库可以存储什么样的字符，定义了可以表示字符的范围

**5.插入数据：**全列插入，指定列插入，多行插入

全列插入：insert	into	[表名称]	values(字段1的值，字段2的值，......)

**6.查询数据：**全列查询、指定列查询、带有约束条件的查询、子查询、多表查询

全列查询：select	*	from	[表名称]

**7.修改表字段：**

命令：alter	table	[表名]	add/drop/modify	[字段名] [字段类型]

注意：当使用alter关键字删除表字段的时候，该字段下所有数据也会被删除	

**8.删除表：**

drop	table	[表名]

### 数据库表内容操作

## 表约束

### 空属性

NULL：如果该字段的值为空，则表示该字段的值可以为空

NOT	NULL：该字段的值不能为空

### 默认值

当插入数据没有给字段值得时候，采用默认值

定义字段约束的时候：defult[默认值]

### 列描述

### zerofill

格式化输出，如果输出的数字的位数不够整型表示的位数，则高位补0后输出

### 主键

1.在表中定义一个主键，并不是重新增加一列，而是给某一列设置上主键属性

2.主键属性保证该列的数据不能为空，不能重复

3.一张表只能有一个主键列

4.主键列的列类型应该为整型

**定义主键：**

​		1.创建数据库表的时候，在字段后面加上primary	key

​		2.定义完毕所有字段之后，在最后一个字段中添加主键列

​			primary	key（列名）

​		3.修改表结构

​			alter	table	t9	add	primary	key（id）

**优势：**

​		1.

​		2.

### 自增长

当我们设置一个列的属性为自增长属性的时候，当插入数据，不给该列数据，则系统会自动填写一个

比上一行数值+1的数值填写进去

auto_increment

### 唯一键

1.定义为唯一键的列，数据不能重复，但可以为空

2.一张表可以给多个列定义唯一键属性

3.唯一键属性+NOT	NULL，就能满足当前列既能为空也不能重复

4.定义一个列为唯一键的同时，也会为该列重新定义一个B+树

**定义唯一键：**

字段后面加unique

### 外键

前提：定义外键的前提，一定是给从表当中某一列定义外键属性，外键属性的约束来自于主表的主键

列

外键就是增加了表和表之间的约束关系：

​	主表都是存放基础属性的表，从表一般都是业务表

## 数据库表结构操作

### 查找

1.全列检索

2.指定列查找

​	select	[][][字段名称1]，[字段名称2]	from	[表名]

3.带有where约束子句的查找

​	where子句：where	字段名称	[运算符]	[比较的值]

​	模糊匹配：

​			%：可以匹配任意字符

​			_：只能匹配一个字符

### 结果排序

**降序：desc**		**升序：asc**

1.order	by	[字段名称]：该列的数据按照默认的从小到大的方式进行排序

### 分页展示

limit	[起始行]	[查询多少行]

对未知表查询时，最好加上limit，避免因为表中数据量过大，查询全表查询导致数据库卡死

###	update

更新：update	[表名]	set	[列名]=[列的值]	where....	order  by....

注意：在更新的sql语句当中没有where进行约束，则会将更改的列对应所有的值都更改
