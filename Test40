## 4.文件描述符和文件流指针的区别

### (1)文件流指针代码本质

char* _IO_read_//读缓冲区起始位置

char* _IO_read_ptr//当前读到的位置1

char* _IO_read_base//读缓冲区末尾位置

- 一个文件流指针当中只能保存一个文件描述符

### (2) C标准库对应的缓冲区

读缓冲区和写缓冲区

### (3) 文件流指针和文件描述符的关系

文件流指针当中包含文件描述符

### (4) 回忆下进程终止章节的exit和_exit函数的区别

刷新缓冲区，指的就是struct _IO_FILE结构体中的缓冲区

## 5.重定向

### (1) 重定向的本质

### (2) 重定向的接口

​	int dup2(itn oldfd,int newfd);



### (3) 重定向的实现代码



### (4) 清空重定向 & 追加重定向

## 6.静态库和动态库

### (1) 目的：将程序代码打包到一个库当中， 提供给调用者

动态库：
		特征：

​			win：后缀为 .dll

​			linux：前缀：lib 	后缀：.so

生成：

​		使用gcc/g++编译命令，需要用到两个命令行参数

​		-fPIC：产生位置无关的代码

​		-shared：产生共享库

使用：
-L [path]
-l[libname]
常见问题：

* 都有哪些方式可以使自己的可执行程序可以找到自己依赖的动态库
  静态库：
  特征：
  生成：
  注意点：使用目标程序进行编译生成
  使用：
